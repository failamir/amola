################################################################################################
#			 							CRUD API
################################################################################################
# 
# 본 스크립트는 toApi.js 에서 읽어 실행하는 스크립트 입니다. 
# 적혀있는 명세에 따라 PHP 파일을 생성해줍니다.
#
# 규칙 )
# 1. php 파일명은 get_, update_, add_, remove_ 중 하나로 시작해야 합니다.
#
# 2. 인자타입은 다음 중 하나여야 합니다.
#		<int>
#		<boolean>
#		<string>
#		<datetime>
#		<now>
#		<password>
#			
# 3. 인자타입에 붙이는 modifier 는 다음과 같은 것들이 있습니다.
# 	* 표시를 붙이면 필수 인자를 의미합니다. 
# 	@ 는 where 절에 들어가는 조건을 의미합니다.
#
# 4. state 를 바꿀 수 있습니다.
# 	auth:true|false		// 인증과정이 필요한지 지정합니다.
# 	grade:2				// 인증과정에서 사용할 권한레벨
# 	connect:...			// DB에 접근하는 코드입니다. $conn 에 mysqli 객체를 넣어주어야 합니다.
#	table:...			// 쿼리를 수행할 대상이 되는 테이블 또는 뷰 입니다.
#	showError:true|false			// 쿼리를 수행할 대상이 되는 테이블 또는 뷰 입니다.
#	onSuccess:... 		//CRUD 가 성공적으로 마무리 되면 호출 할 코드
#
# 예제 )
# 	userId 를 기준으로 유저아이디를 얻어오려면 다음과 같이 작성할 수 있습니다.
#	get_user.php?userId=<int*@gt>  
# 	userId를 기준으로 이름이나 닉네임을 수정하는 API는 다음과 작성 할 수 있습니다.	
#	update_user.php?userId=<int*@>&name=<string>&nick=<string> 	
#	
################################################################################################

auth:false
grade:2
connect:$conn = getDb();
showError:true


table:users

# userId 또는 name 을 이용해 유저목록을 얻어온다. 아무 인자도 지정하지 않으면 전체 목록을 얻는다.
get_user.php?userId=<int@>&name=<string@>

# 내 정보를 얻어온다.
auth:true
get_myInfo.php?userId=<int$*@>

auth:false

# name 으로 유저목록을 조회한다.  아무 인자도 지정하지 않으면 전체 목록을 얻는다.
get_users.php?name=<string@>

#새로운 유저를 등록.
add_user.php?email=<string*>&nick=<string*>&name=<string*>&gender=<boolean*>&passwd=<password*>&birthday=<datetime>&location=<string>&createdAt=<now>&thumbnail=<string>

#유저 정보를 갱신
update_user.php?userId=<@*int>&name=<string>&nick=<string>&passwd=<password>&birtyday=<datetime>&location=<string>&removed=<boolean>&pushId=<string>&thumbnail=<string>


table:bookings_with_club

#부킹 목록을 얻어온다.
get_bookings.php?clubId=<int@>&bookingId=<int@>&beginAt=<datetime@>&endAt=<datetime@>&isPrepay=<boolean@>

table:bookings
#새로운 부킹을 추가
add_booking.php?clubId=<int*>&beginAt=<datetime*>&endAt=<datetime*>&price=<int*>&remarks=<string>

#부킹을 삭제한다.
remove_booking.php?bookingId=<int*@>

table:club_with_location
#골프장 목록조회
get_clubs.php?clubId=<int@>&name=<string@>&isPrepay=<boolean@>&location=<string@>

table:club

#골프장 신규 등록
add_club.php?name=<string*>&isPrepay=<boolean*>&locationId=<int*>&remarks=<string>&createdAt=<now>

#등록된 골프장 제거
remove_club.php?clubId=<int@*>

#등록된 골프장 수정
update_club.php?clubId=<int@*>&name=<string>&isPrepay=<boolean>&locationId=<int>&remarks=<string>

table:combined_joins

#조인 목록 조회
get_joins.php?joinId=<int@>&beginAt=<datetime@>&endAt=<datetime@>&userId=<int@>&clubId=<int@>&price=<int@>&clubName=<string@>&clubIsPrepay=<boolean@>&memberLimit=<int@>


table:joins

#새로운 조인을 생성한다.
add_join.php?userId=<int*>&bookingId=<int*>&beginAt=<datetime*>&endAt=<datetime*>&memberLimit=<int*>&remarks=<string>

#조인의 정보를 수정한다.
update_join.php?joinId=<int*@>&bookingId=<int>&beginAt=<datetime>&endAt=<datetime>&memberLimit=<int>

#조인을 삭제한다.
remove_join.php?joinId=<int*@>

table:join_members
#조인 참가자를 등록한다.
add_joinMember.php?joinId=<int*>&userId=<int*>&joinAt=<now>
#조인 참가자를 얻어온다.
get_joinMember.php?joinId=<int@>&userId=<int@>
#조인 참가자 정보를 수정한다.
update_joinMember.php?joinMemberId=<int@*>&paidAt=<datetime>&joinId=<int>&userId=<int>
#조인 참가자를 제거한다.
remove_joinMember.php?joinMemberId=<int@*>

table:combined_boards

#동호회 목록을 조회한다.
get_boards.php?userId=<int@>&desc=<string@>

#자세한 동호회 정보를 얻는다.
get_board.php?boardId=<boardId@*>


#동호회를 생성한다.
table:boards
add_board.php?userId=<int*>&name=<string*>&desc=<string*>&titleImageUrl=<string>&detail=<string>

#동호회 정보를 수정한다.
table:boards
update_board.php?boardId=<int*@>&name=<string>&desc=<string>&titleImageUrl=<string>&detail=<string>

#동호회를 삭제한다.
table:boards
remove_board.php?boardId=<int*@>

table:board_members
#동호회에 참여한다.
add_boardMember.php?userId=<int*>&boardId=<int*>
#동호회에서 탈퇴한다.
remove_boardMember.php?userId=<int*>&boardId=<int*>

table:board_contents
#동호회에 작성된 글을 불러온다.
get_boardContent.php?boardId=<int*@>

#특정 유저 기준으로 동호회에 작성한 글을 불러온다.
table:combined_board_contents
get_boardContentByUserId.php?userId=<int*@>

#동호회에 글을 작성한다.
add_boardContent.php?boardId=<int*>&userId=<int*>&title=<string*>&text=<string*>&createdAt=<now>
#동호회 글을 수정한다.
update_boardContent.php?contentId=<int*@>&title=<string*>&text=<string*>
#동호회 글을 삭제한다.
remove_boardContent.php?contentId=<int@*>


#채팅방 목록을 조회한다.
table:combined_chats
get_chats.php?chatId=<int@>&userId=<int@>&createdAt=<datetime@>

#참석한 채팅방 목록을 얻어온다.
table:joined_chats
get_joinedChats.php?joinedUserId=<int*@>


table:chat_members
#채팅에 참여한다.
onSuccess:onChatMemberAdded($conn, $chatId, $userId);
add_chatMember.php?userId=<int*>&chatId=<int*>&createdAt=<now>
onSuccess:

#채팅에서 나간다.
onSuccess:onChatMemberRemoved($conn, $chatId, $userId);
remove_chatMember.php?userId=<int*@>&chatId=<int*@>
onSuccess:

#채팅 내용을 얻어온다. (현재는 참여 여부에 관계없이 내용을 가져 올 수 있음.)
table:combined_chat_messages
get_chatMessage.php?chatId=<int*@>&messageId=<int@>&createdAt=<datetime@>

#채팅메시지를 입력한다.
table:chat_messages
auth:true
onSuccess:onChat($conn, $chatId, $insertId, $userId);
add_chatMessage.php?chatId=<int*@>&userId=<int$*>&text=<string*>&createdAt=<now>
onSuccess:

#채팅방을 만든다.
table:chats
add_chat.php?userId=<int*>&createdAt=<now>

#채팅방을 삭제한다.
table:chats
remove_chat.php?chatId=<int*@>

#채팅방 정보를 변경한다. 방장 및 메인이미지
table:chats
update_chat.php?chatId=<int@*>&userId=<int*@>&mainImageUrl=<string>



table:merchandise
#상점 상품 목록을 얻는다.
get_merchandises.php?merchandiseId=<int@>&categoryId=<string@>&subcategoryId=<string@>&name=<string@>&price=<int@>&shortDesc=<string@>&desc=<string@>&detail=<string@>&closed=<boolean@>

#상점 상품을 등록한다.
add_merchandise.php?categoryId=<string*>&subcategoryId=<string*>&name=<string*>&price=<int*>&shortDesc=<string*>&desc=<string*>&detail=<string>&imageUrl=<string*>&createdAt=<now>&closed=<boolean>
#상점 상품 정보를 수정한다.
update_merchandise.php?merchandiseId=<int@*>&categoryId=<string>&subcategoryId=<int>&name=<string>&price=<int>&shortDesc=<string>&desc=<string>&detail=<string>&imageUrl=<string>&closed=<boolean>
#상점 상품을 제거한다.
remove_merchandise.php?merchandiseId=<int@*>

table:configs
#전역 설정값을 가져온다.
get_configs.php?configId=<string@>
#전역 설정값을 수정한다.
update_configs.php?configId=<string*@>&data=<string*>

table:purchase_with_merchandise
#구매목록을 얻는다.
get_purchase.php?purchaseId=<int@>&merchandiseId=<int@>&userId=<int@>&createdAt=<datetime@>&paidAt=<datetime@>&refundedAt=<datetime@>&name=<string@>&price=<int@>

table:purchase
#구매정보를 기록한다.
add_purchase.php?merchandiseId=<int*@>&userId=<int*@>&createdAt=<now>
#구매정보를 수정한다.
update_purchase.php?purchaseId=<int*@>&merchandiseId=<int>&userId=<int>&createdAt=<datetime>&paidAt=<datetime>&refundedAt=<datetime>
#구매정보를 제거한다.
remove_purchase.php?purchaseId=<int*@>

table:locations
#지역목록을 얻어온다.
get_locations.php
#지역을 추가한다.
add_location.php?location=<string*>
#등록된 지역을 삭제한다.
remove_location.php?locationId=<int@*>
#등록된 지역을 수정한다.
update_location.php?locationId=<int@*>&location=<string*>


table:combined_merchandise_favorite
#사용자의 즐겨찾기 목록을 얻어온다.
get_merchandiseFavorite.php?userId=<int@*>

table:merchandise_favorite
#사용자의 즐겨찾기를 추가한다.
add_merchandiseFavorite.php?userId=<int@*>&merchandiseId=<int*>
#사용자의 즐겨찾기를 제거한다.
remove_merchandiseFavorite.php?userId=<int@*>&merchandiseId=<int@*>